<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>凉生</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-08T02:46:27.475Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>凉生</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基础博弈</title>
    <link href="http://yoursite.com/2019/09/08/%E5%9F%BA%E7%A1%80%E5%8D%9A%E5%BC%88/"/>
    <id>http://yoursite.com/2019/09/08/基础博弈/</id>
    <published>2019-09-08T02:34:51.000Z</published>
    <updated>2019-09-08T02:46:27.475Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础博弈"><a href="#基础博弈" class="headerlink" title="基础博弈"></a>基础博弈</h2><h4 id="1-博弈论的简介"><a href="#1-博弈论的简介" class="headerlink" title="1. 博弈论的简介"></a><strong>1. 博弈论的简介</strong></h4><p>　　博弈论是二人或多人在平等的对局中各自利用对方的策略变换自己的对抗策略，达到取胜目标的理论。博弈论是研究互动决策的理论。博弈可以分析自己与对手的利弊关系，从而确立自己在博弈中的优势，因此有不少博弈理论，可以帮助对弈者分析局势，从而采取相应策略，最终达到取胜的目的。博弈的类型分为：合作博弈、非合作博弈、完全信息博弈、非完全信息博弈、静态博弈、动态博弈，等等。</p><h4 id="2-基础概念"><a href="#2-基础概念" class="headerlink" title="2. 基础概念"></a><strong>2. 基础概念</strong></h4><p>　　必胜态：通过某一步可以转移到必败态的局面。 也就是说，对于一个处于必胜态的玩家，他总能找到一种合法操作，将当前局面变成一个必败态然后交给对方，如果中途不出现意外的话，最终自己就会得到胜利。但是处于必胜态并不意味着任意的操作都能将当前局面变成必败态。</p><p>　　必败态：通过某一步只能转移到必胜态的局面。 也就是说，处于必败态的玩家无论做什么操作，都只会将当前的局面变成必胜态，然后交给对方，只要对方足够聪明，那么该玩家将输掉比赛。</p><p>　　对于足够聪明的两个博弈者来说，游戏的胜负在比赛前就已经知道(当然，我这里只是说在题目里，在现实中如果是稍微复杂一点的博弈游戏，单凭人脑是很难达到那种水平)，也就是说胜利的一方总能找到胜利的路径，而输掉的那一方无论怎样走，胜利的一方都能找到对应的方法。也就是说先后手以及起始局面可以决定整场博弈的胜负。</p><h4 id="3-巴什博弈（Bash-Game）"><a href="#3-巴什博弈（Bash-Game）" class="headerlink" title="3. 巴什博弈（Bash Game）"></a><strong>3. 巴什博弈（Bash Game）</strong></h4><blockquote><p><strong>只有一堆n个物品，两个人轮流从这堆物品中取物，规定每次至少取一个，最多取m个。最后取光者得胜。</strong></p></blockquote><p>　　<u>求 r=n%(1+m), 判断 r 是否等于 0，如果 r 不等于 0，先手必胜，否则后手必胜</u>。为什么？</p><p>　　我们可以分析一下，对于 n=(1+m) * r+s，如果 s不等于 0 的话，先手取走s，那么总的物品数剩下 (1+m) * r，然后后手取走 k 的话，先手只要取走 1+m-k 的物品，就可以保持 n=(1+m) 的倍数的局面交给对方，这意味着什么？意味着 n=0 的局面最终会被后手得到，那样后手就输了。而如果s等于0的话，那么对于先手取k的物品，后手只要取 1+m-k 个物品就可以将n=0的局面转给先手，先手就输了。</p><p>　　所以这里的必败态是(1+m)的倍数。有没有发现，对于一场博弈来说，所有的必败态都会有相似的地方，就像这里，必败态一定是(1+m)的倍数。</p><p>　　然后再说深一点的巴什博弈：只有一堆n个物品，两个人轮流从这堆物品中取物，规定每次至少取p个，最多取q个，如果剩下的物品数小于p的话需要一次取完。最后取光者得胜。</p><p>　　这个又怎样求？按照上面的思路，我们可以得到公式n=(p+q)*r+s。</p><p>　　那么这里的s有两种情况①s&gt;=p，②s&lt;p,。</p><p>　　对于①很容易分析，只要先手取走s的话，对于后手去k，先手只要取p+q-k即可保证先手必胜。</p><p>　　对于②，分析起来没有①那么简单，所以这可能就一定需要用后面讲到的用SG值来判断了。</p><p>　　然后在讲一下一个问题。如果条件和基本的巴什博弈基本一样，但是说的是最后谁是无法再取物品的是赢家的话，那该怎么处理呢？</p><p>　　既然是这样，先手只要判断一下能不能将最后一步留给自己就可以了。而最后一步最少也要保留一个物品，所以我们可以将这个问题转化为基本的巴什博弈，只是终点变成一个物品，而不是零个物品。所以判断的条件是(n-1)%(1+m)!=0 ? 先手赢 : 后手赢。</p><p><strong>代码实现</strong> :</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Bash_Game</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span> </span>&#123;<span class="comment">//是否先手有必赢策略</span></span><br><span class="line">    <span class="keyword">if</span> (n % (<span class="number">1</span> + m) != <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;  <span class="comment">//先手赢  </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  <span class="comment">//后手赢</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="例题"><a href="#例题" class="headerlink" title="例题:"></a>例题:</h4><p><strong>1. HDU1846 (模板题)</strong> </p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1846" target="_blank" rel="noopener">http://acm.hdu.edu.cn/showproblem.php?pid=1846</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="keyword">int</span> n, m;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">        <span class="keyword">int</span> s = n % (<span class="number">1</span> + m);</span><br><span class="line">        <span class="keyword">if</span>(s) <span class="built_in">cout</span> &lt;&lt; <span class="string">"first"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"second"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2. HDU4764 (巴什博弈变形)</strong> </p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4764" target="_blank" rel="noopener">http://acm.hdu.edu.cn/showproblem.php?pid=4764</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &amp;&amp; n &amp;&amp; m) &#123;</span><br><span class="line">        <span class="keyword">int</span> s = (n - <span class="number">1</span>) % (<span class="number">1</span> + m);  <span class="comment">//谁先写到 大于等于n 谁就输</span></span><br><span class="line">        <span class="keyword">if</span>(s) <span class="built_in">cout</span> &lt;&lt; <span class="string">"Tang"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"Jiang"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-尼姆博弈-Nimm-Game-和-扩展"><a href="#4-尼姆博弈-Nimm-Game-和-扩展" class="headerlink" title="4. 尼姆博弈(Nimm Game) 和 扩展"></a>4. 尼姆博弈(Nimm Game) 和 扩展</h4><blockquote><p><strong>有若干堆各若干个物品，两个人轮流从某一堆取任意多的物品，规定每次至少取一个，多者不限，最后取光者得胜。</strong></p></blockquote><p>　　假设这里有n堆物品，每一堆的数量分别是a1,a2,a3,…,an。</p><p>　　那么<u>如果ans = a1^a2^a3^…^an != 0，那么就是先手必胜，否则就是后手必胜</u>。</p><p>　　这里我们需要用到二进制的思想。首先我们用必胜态和必败态的定义来证明一下。</p><p>　　首先，根据题意，只要还有物品，玩家就一定要取，而且每一次操作以后，物品的数目必定会减少。</p><p>　　对于必败态，也就是ans=0，那就说明a1^a2^a3^…^an=0，令a1,a2,a3…,an中，ai为某一堆物品的数量, ai^m=a1^a2^a3…^ai^…^an=0。我们从ai里面取走物品，那么ai–&gt;ai’最终ai’^m必然不等于零，即转为必胜态，符合必败态的定义。(感觉证明不算很严谨······)</p><p>　　对于必胜态，如果此时的状态为aj^p=q(p等于除了aj以外的其他a[]的异或和)，假设我们从aj上面取一定数目的物品使得aj–&gt;aj’，最终使aj’^p = 0的话，那么我们可以得到：</p><p>　　aj’^p^q=q   —&gt;   aj^aj’^p^p=q    —&gt;   aj^aj’=q   —&gt;   aj^aj’^q=0</p><p>　　这意味着什么，因为我们是从aj那里取走一定的物品以后变成aj’的，这里取走的个数可能有很多种方法，但是，如果我们取走的个数是二的次幂这么多呢？很明显q就是我们需要从aj上面取走的个数了。只要当前的玩家从某一堆物品个数比q大的堆上取走q个物品，那么就可以将当前状态转化为必败态，并且转给对方。所以要保证先手必胜的条件就是a1^a2^a3^<figure class="highlight plain"><figcaption><span>!</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**代码实现:**</span><br><span class="line"></span><br><span class="line">```c++</span><br><span class="line">int Nimm_Game(int n) &#123; //假设n个数存在数组f[]中,有必胜策略返回1</span><br><span class="line">    int flag = 0;</span><br><span class="line">    for(int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">    flag ^= f[i];</span><br><span class="line">    &#125;</span><br><span class="line">    if(flag) return 1;  //先手赢</span><br><span class="line">    return 0;   //后手赢</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="例题-1"><a href="#例题-1" class="headerlink" title="例题:"></a>例题:</h4><p><strong>1. 洛谷 P2197 (尼姆博弈 模板)</strong></p><p><a href="https://www.luogu.org/problem/P2197" target="_blank" rel="noopener">https://www.luogu.org/problem/P2197</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="keyword">int</span> n, x, ans = <span class="number">0</span>;;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">            ans ^= x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans) <span class="built_in">cout</span> &lt;&lt; <span class="string">"Yes"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"No"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>扩展: 求 第一次/每次 取出的数量</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一次从b堆中取出a个</span></span><br><span class="line">这个游戏的SG值就是各堆数量的异或和，当 SG 为 <span class="number">0</span> 时先手必败，否则先手就要把SG变为<span class="number">0</span></span><br><span class="line">先检验 SG 值，如果是 <span class="number">0</span> 输出 lose，否则我们按照以下原则行动</span><br><span class="line"></span><br><span class="line">--<span class="comment">//----重点来了------</span></span><br><span class="line">有 n 个数的异或值不为 <span class="number">0</span> 现在要减少一个数使异或值为 <span class="number">0</span></span><br><span class="line"></span><br><span class="line">假设 n 个数：a1 ,a2,a3...an</span><br><span class="line"></span><br><span class="line">a1^a2^a3^..^an=k</span><br><span class="line"></span><br><span class="line">那么我们可以对一个数进行操作,假设这个数是a1，</span><br><span class="line">设 a1^k = a'， a'^a2^a3^...^an = a1^a2^a3^...^an^k = k^k = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">所以我们只需要从头到尾检验每个数异或k的值是否比它小(因为是要减少)，遇到小的直接输出 ai-ai^k 即可</span><br><span class="line"></span><br><span class="line"><span class="comment">//在这里要明白:</span></span><br><span class="line">假设把每堆石子的数量异或以后得到数为 k (k!=<span class="number">0</span>)</span><br><span class="line">    这里 k 并不是第一次要取出 k 个石子</span><br><span class="line">    在这里设用 k 去与每堆f[i]异或得到的一个数为 m</span><br><span class="line">    若 m &lt; f[i], 则说明第一次是在 第i堆中取了f[i]-k^f[i]个石子</span><br></pre></td></tr></table></figure><h4 id="例题-2"><a href="#例题-2" class="headerlink" title="例题:"></a>例题:</h4><p><strong>1. 洛谷 P1427 (第一次取出)</strong></p><p><a href="https://www.luogu.org/problem/P1247" target="_blank" rel="noopener">https://www.luogu.org/problem/P1247</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> k[<span class="number">500005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; k[i];</span><br><span class="line">        ans ^= k[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!ans) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"lose"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>((ans ^ k[i]) &gt;= k[i]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; k[i] - (ans ^ k[i]) &lt;&lt; <span class="string">' '</span>&lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        k[i] ^= ans;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; k[i] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2. HDU 2176 (每次 取出/剩余 )</strong></p><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2176" target="_blank" rel="noopener">http://acm.hdu.edu.cn/showproblem.php?pid=2176</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> k[<span class="number">500005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &amp;&amp; n) &#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; k[i];</span><br><span class="line">            ans ^= k[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!ans) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"No"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Yes"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>((ans ^ k[i]) &gt;= k[i]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">int</span> t = ans ^ k[i];</span><br><span class="line">            <span class="comment">//t是按照最优的方法取完石子后，剩下的石子</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; k[i] &lt;&lt; <span class="string">' '</span>&lt;&lt; t &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;基础博弈&quot;&gt;&lt;a href=&quot;#基础博弈&quot; class=&quot;headerlink&quot; title=&quot;基础博弈&quot;&gt;&lt;/a&gt;基础博弈&lt;/h2&gt;&lt;h4 id=&quot;1-博弈论的简介&quot;&gt;&lt;a href=&quot;#1-博弈论的简介&quot; class=&quot;headerlink&quot; title=&quot;1
      
    
    </summary>
    
    
    
      <category term="Better late than never. 只要开始，虽晚不迟." scheme="http://yoursite.com/tags/Better-late-than-never-%E5%8F%AA%E8%A6%81%E5%BC%80%E5%A7%8B%EF%BC%8C%E8%99%BD%E6%99%9A%E4%B8%8D%E8%BF%9F/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/09/06/hello-world/"/>
    <id>http://yoursite.com/2019/09/06/hello-world/</id>
    <published>2019-09-06T15:43:40.186Z</published>
    <updated>2019-09-06T15:43:40.186Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
